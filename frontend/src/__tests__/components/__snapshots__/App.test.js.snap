// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App/> renders <App /> component 1`] = `
<Fragment>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Frontview: Interview for Everyone
    </title>
  </HelmetWrapper>
  <Connect(withRouter(Header)) />
  <main
    id="main"
  >
    <withRouter(ScrollToTopRoute) />
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Authorization)",
            "type": [Function],
          }
        }
        path="/login"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Authorization)",
            "type": [Function],
          }
        }
        path="/signup"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Authorization)",
            "type": [Function],
          }
        }
        path="/me"
      />
      <Route
        component={[Function]}
        path="/questions"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Authorization)",
            "type": [Function],
          }
        }
        path="/interview"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Authorization)",
            "type": [Function],
          }
        }
        exact={true}
        path="/comments/not-verified"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Authorization)",
            "type": [Function],
          }
        }
        path="/comments/author/:username"
      />
      <Route
        component={[Function]}
        path="/confirmation/:token"
      />
      <Route
        component={[Function]}
        path="/about"
      />
      <Route
        component={[Function]}
      />
    </Switch>
  </main>
  <Footer />
  <Connect(FlashList) />
  <FaqButton />
  <ScrollUp
    duration={250}
    easing="easeOutCubic"
    showUnder={160}
    style={
      Object {
        "bottom": 16,
        "right": 16,
      }
    }
    topPosition={0}
  >
    <Button
      active={false}
      disabled={false}
      type="button"
      variant="warning"
    >
      <FontAwesome
        name="chevron-up"
      />
    </Button>
  </ScrollUp>
</Fragment>
`;
